// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

// 사용자와 사용자정보 1:1 
// 사용자와 이력서 1:N
model Users {
    userId    Int      @id @default(autoincrement()) @map("userId")
    email     String   @unique @map("email")
    password  String   @map("password")
    createdAt DateTime @default(now()) @map("createdAt")
    updatedAt DateTime @updatedAt @map("updatedAt")

    userInfos UserInfos?
    resumes   Resumes[]

    @@map("Users")
}

model Resumes {
    resumeId  Int      @id @default(autoincrement()) @map("resumeId")
    userId    Int      @unique @map("userId")
    title     String   @map("title")
    intro     String   @map("intro") @db.Text
    author    String   @map("author")
    status    Status   @default(APPLY) @map("status")
    createdAt DateTime @default(now()) @map("createdAt")
    updatedAt DateTime @updatedAt @map("updatedAt")

    user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

    @@map("Resumes")
}

enum Status {
    APPLY
    DROP
    PASS
    INTERVIEW1
    INTERVIEW2
    FINAL_PASS
}

model UserInfos {
    userInfoId Int      @id @default(autoincrement()) @map("userInfoId")
    userId     Int      @unique @map("userId")
    name       String   @map("name")
    age        Int?     @map("age")
    createdAt  DateTime @default(now()) @map("createdAt")
    updatedAt  DateTime @updatedAt @map("updatedAt")

    user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

    @@map("UserInfos")
}
